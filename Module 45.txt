-- 1

SELECT * 
FROM information_schema.columns 
WHERE table_schema = 'public' 
AND 
table_name = 'naep';

-- 2
SELECT * 
FROM naep
LIMIT 50;

-- 3

SELECT 
	state, 
	count(avg_math_4_score), 
	avg(avg_math_4_score), 
	min(avg_math_4_score), 
	max(avg_math_4_score) 
FROM naep
GROUP BY state
ORDER BY state ASC;

-- 4

SELECT 
	state, 
	count(avg_math_4_score), 
	avg(avg_math_4_score), 
	min(avg_math_4_score), 
	max(avg_math_4_score)
FROM naep
GROUP BY state
HAVING max(avg_math_4_score) - min(avg_math_4_score) > 30
ORDER BY state ASC;

-- 5

SELECT state AS bottom_10_states
FROM naep
WHERE year = 2000
ORDER BY avg_math_4_score asc
LIMIT 10;

-- 6

SELECT round(avg(avg_math_4_score :: float):: numeric, 2)
FROM naep
WHERE year = 2000;

-- 7

SELECT state AS below_avg_states_y2000
FROM naep
WHERE year = 2000
AND avg_math_4_score < (SELECT round(avg(avg_math_4_score :: float):: numeric, 2)
						FROM naep
						WHERE year = 2000);

-- 8

SELECT state AS scores_missing_y2000
FROM naep
WHERE year = 2000
AND
avg_math_4_score IS NULL;


-- 9

SELECT n.state, round(n.avg_math_4_score, 2), f.total_expenditure
FROM naep AS n
LEFT JOIN finance AS f
ON n.id = f.id
WHERE n.year = 2000
AND n.avg_math_4_score IS NOT NULL
ORDER BY f.total_expenditure desc;